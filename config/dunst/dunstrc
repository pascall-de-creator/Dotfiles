[global]
    monitor = 0
    follow = mouse

    width = (300, 400)
    height = 200

    origin = top-right
    offset = 4x4
    scale = 0

    notification_limit = 10

    progress_bar = true
    progress_bar_height = 10
    progress_bar_frame_width = 0
    progress_bar_min_width = 125
    progress_bar_max_width = 300
    progress_bar_corner_radius = 4

    icon_corner_radius = 5

    indicate_hidden = yes

    transparency = 30

    separator_height = 2
    padding = 8
    horizontal_padding = 8
    text_icon_padding = 10
    frame_width = 3

    frame_color = "#9ca4d2"

    gap_size = 5
    separator_color = auto
    sort = yes

    font = poppins 9
    line_height = 3

    markup = full

    # the format of the message.  possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %i  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  literal %
    # markup is allowed
    format = "%a\n<b>%s</b>\n%b"

    alignment = left
    vertical_alignment = center

    show_age_threshold = 60

    ellipsize = end
    ignore_newline = no

    stack_duplicates = true
    hide_duplicate_count = false
    show_indicators = yes

    enable_recursive_icon_lookup = true

    # icon_theme = "tela-circle-dracula"
    # icon_theme = "adwaita"
    icon_theme = "breeze"

    icon_position = left

    min_icon_size = 32
    max_icon_size = 50

    sticky_history = yes
    history_length = 20

    dmenu = /usr/bin/wofi -dmenu
    browser = /usr/bin/xdg-open

    always_run_script = true

    title = dunst
    class = dunst

    corner_radius = 10

    ignore_dbusclose = false

    force_xwayland = false

    force_xinerama = false

    mouse_left_click = context, close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

[experimental]
    per_monitor_dpi = false

# messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#
# shell-like globbing will get expanded.
#
# instead of the appname filter, it's recommended to use the desktop_entry filter.
# glib based applications export their desktop-entry name. in comparison to the appname,
# the desktop-entry won't get localized.
#
# scripting
# you can specify a script that gets run when the rule matches by
# setting the "script" option.
# the script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "low", "normal" or "critical".
#
# note: it might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        if the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # this notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # this notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # this notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg

[type-1]
    summary = "t1"
    format = "<b>%a</b>"

[type-2]
    summary = "t2"
    format = "<span size="250%">%a</span>\n%b"

[urgency_low]
    background = 	"#111019" # "#0f0f0f"
    foreground = 	"#f1f0f5" # "#89b4fa"
    frame_color = 	"#0b0a10" # "#89b4fa"
    timeout = 3
    highlight = "#aac5a0"

[urgency_normal]
    background = 	"#111019" # "#0f0f0f"
    foreground = 	"#f1f0f5" # "#a6e3a1"
    frame_color = 	"#0b0a10" # "#a6e3a1"
    timeout = 5
    highlight = "#a8c5e6"

[urgency_critical]
    background = 	"#111019" # "#0f0f0f"
    foreground = 	"#e97193" # "#f38ba8"
    frame_color = 	"#0b0a10" # "#f38ba8"
    timeout = 0
    highlight = "#e97193"
